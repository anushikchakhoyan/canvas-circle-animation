{"mappings":"A,C,KCAA,cAEC,AAAA,WACG,IAAI,EAAS,SAAS,cAAc,CAAC,kBACjC,EAAM,EAAO,UAAU,CAAC,MACxB,EAAc,EAAE,CAEhB,EAAQ,EAAO,KAAK,CAAG,OAAO,UAAU,CACxC,EAAS,EAAO,MAAM,CAAG,OAAO,WAAW,AAG/C,OAAM,EACF,YAAY,CAAC,CAAE,CAAC,CAAE,CAAE,CAAE,CAAE,CAAE,CAAM,CAAE,CAC9B,IAAI,CAAC,CAAC,CAAG,EACT,IAAI,CAAC,CAAC,CAAG,EACT,IAAI,CAAC,EAAE,CAAG,EACV,IAAI,CAAC,EAAE,CAAG,EACV,IAAI,CAAC,MAAM,CAAG,CAClB,CAEA,MAAO,CACH,EAAI,SAAS,GACb,EAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAAE,IAAI,CAAC,CAAC,CAAE,IAAI,CAAC,MAAM,CAAE,EAAG,EAAI,KAAK,EAAE,CAAE,CAAA,GACrD,EAAI,SAAS,CAAG,2BAChB,EAAI,IAAI,GACR,EAAI,SAAS,EACjB,CAEA,QAAS,CACD,CAAA,IAAI,CAAC,CAAC,CAAG,IAAI,CAAC,MAAM,CAAG,GAAS,IAAI,CAAC,CAAC,CAAG,IAAI,CAAC,MAAM,CAAG,CAAA,GACvD,CAAA,IAAI,CAAC,EAAE,CAAG,CAAC,IAAI,CAAC,EAAE,AAAF,EAGhB,CAAA,IAAI,CAAC,CAAC,CAAG,IAAI,CAAC,MAAM,CAAG,GAAU,IAAI,CAAC,CAAC,CAAG,IAAI,CAAC,MAAM,CAAG,CAAA,GACxD,CAAA,IAAI,CAAC,EAAE,CAAG,CAAC,IAAI,CAAC,EAAE,AAAF,EAGpB,IAAI,CAAC,CAAC,EAAI,IAAI,CAAC,EAAE,CACjB,IAAI,CAAC,CAAC,EAAI,IAAI,CAAC,EAAE,CACjB,IAAI,CAAC,IAAI,EACb,CACJ,CAOA,IAAK,IAAI,EAAI,EAAG,EAAI,GAAI,IAAK,CACzB,IAAI,EALG,KAAK,KAAK,CAAC,AAAiB,GAAjB,KAAK,MAAM,IAKH,GACtB,EAAI,KAAK,KAAK,CAAC,KAAK,MAAM,GAAK,GAC/B,EAAI,KAAK,KAAK,CAAC,KAAK,MAAM,GAAK,GAC/B,EAAK,KAAK,MAAM,GAAK,EACrB,EAAK,KAAK,MAAM,GAAK,EAEzB,EAAY,IAAI,CAAC,IAAI,EAAO,EAAG,EAAG,EAAI,EAAI,GAC9C,EAWA,AATA,SAAS,IACL,OAAO,qBAAqB,CAAC,GAC7B,EAAI,SAAS,CAAC,EAAG,EAAG,EAAO,GAE3B,IAAK,IAAI,EAAI,EAAG,EAAI,EAAY,MAAM,CAAE,IACpC,CAAW,CAAC,EAAE,CAAC,MAAM,EAE7B,GAGJ,G,C","sources":["<anon>","src/index.js"],"sourcesContent":["(() => {\n'use strict';\n(function() {\n    let canvas = document.getElementById('canvas-overlay');\n    let ctx = canvas.getContext('2d');\n    let circleArray = [];\n    let width = canvas.width = window.innerWidth;\n    let height = canvas.height = window.innerHeight;\n    // Circle Object creator\n    class Circle {\n        constructor(x, y, dx, dy, radius){\n            this.x = x;\n            this.y = y;\n            this.dx = dx;\n            this.dy = dy;\n            this.radius = radius;\n        }\n        draw() {\n            ctx.beginPath();\n            ctx.arc(this.x, this.y, this.radius, 0, 2 * Math.PI, false);\n            ctx.fillStyle = 'rgba(255, 255, 255, 0.5)';\n            ctx.fill();\n            ctx.closePath();\n        }\n        update() {\n            if (this.x + this.radius > width || this.x - this.radius < 0) this.dx = -this.dx;\n            if (this.y + this.radius > height || this.y - this.radius < 0) this.dy = -this.dy;\n            this.x += this.dx;\n            this.y += this.dy;\n            this.draw();\n        }\n    }\n    function getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n    // Generates Circles\n    for(let i = 0; i < 20; i++){\n        let radius = getRandomInt(40, 80);\n        let x = Math.floor(Math.random() * width);\n        let y = Math.floor(Math.random() * height);\n        let dx = Math.random() - 2;\n        let dy = Math.random() - 2;\n        circleArray.push(new Circle(x, y, dx, dy, radius));\n    }\n    function animate() {\n        window.requestAnimationFrame(animate);\n        ctx.clearRect(0, 0, width, height);\n        for(let j = 0; j < circleArray.length; j++)circleArray[j].update();\n    }\n    animate();\n})(); // TODO: make responsive\n // https://jsfiddle.net/lannymcnie/4yy08pax/\n\n})();\n//# sourceMappingURL=index.js.map\n","'use strict';\n\n(function () {\n    let canvas = document.getElementById('canvas-overlay');\n    let ctx = canvas.getContext('2d');\n    let circleArray = [];\n\n    let width = canvas.width = window.innerWidth;\n    let height = canvas.height = window.innerHeight;\n\n    // Circle Object creator\n    class Circle {\n        constructor(x, y, dx, dy, radius) {\n            this.x = x;\n            this.y = y;\n            this.dx = dx;\n            this.dy = dy;\n            this.radius = radius;\n        }\n\n        draw() {\n            ctx.beginPath();\n            ctx.arc(this.x, this.y, this.radius, 0, 2 * Math.PI, false);\n            ctx.fillStyle = 'rgba(255, 255, 255, 0.5)';\n            ctx.fill();\n            ctx.closePath();\n        };\n\n        update() {\n            if (this.x + this.radius > width || this.x - this.radius < 0) {\n                this.dx = -this.dx;\n            }\n\n            if (this.y + this.radius > height || this.y - this.radius < 0) {\n                this.dy = -this.dy;\n            }\n\n            this.x += this.dx;\n            this.y += this.dy;\n            this.draw();\n        };\n    }\n\n    function getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min + 1)) + min\n    }\n\n    // Generates Circles\n    for (let i = 0; i < 20; i++) {\n        let radius = getRandomInt(40, 80);\n        let x = Math.floor(Math.random() * width);\n        let y = Math.floor(Math.random() * height);\n        let dx = Math.random() - 2;\n        let dy = Math.random() - 2;\n\n        circleArray.push(new Circle(x, y, dx, dy, radius));\n    }\n\n    function animate() {\n        window.requestAnimationFrame(animate);\n        ctx.clearRect(0, 0, width, height);\n\n        for (let j = 0; j < circleArray.length; j++) {\n            circleArray[j].update();\n        }\n    }\n\n    animate();\n})();\n\n// TODO: make responsive\n// https://jsfiddle.net/lannymcnie/4yy08pax/"],"names":["canvas","document","getElementById","ctx","getContext","circleArray","width","window","innerWidth","height","innerHeight","Circle","constructor","x","y","dx","dy","radius","draw","beginPath","arc","Math","PI","fillStyle","fill","closePath","update","i","floor","max","random","push","animate","requestAnimationFrame","clearRect","j","length"],"version":3,"file":"index.js.map"}