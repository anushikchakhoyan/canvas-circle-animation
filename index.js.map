{"mappings":"AAAA;AAEC,CAAA;IACG,IAAI,SAAS,SAAS,cAAc,CAAC;IACrC,IAAI,MAAM,OAAO,UAAU,CAAC;IAC5B,IAAI,cAAc,EAAE;IAEpB,IAAI,QAAQ,OAAO,KAAK,GAAG,OAAO,UAAU;IAC5C,IAAI,SAAS,OAAO,MAAM,GAAG,OAAO,WAAW;IAE/C,wBAAwB;IACxB,MAAM;QACF,YAAY,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,CAAE;YAC9B,IAAI,CAAC,CAAC,GAAG;YACT,IAAI,CAAC,CAAC,GAAG;YACT,IAAI,CAAC,EAAE,GAAG;YACV,IAAI,CAAC,EAAE,GAAG;YACV,IAAI,CAAC,MAAM,GAAG;QAClB;QAEA,OAAO;YACH,IAAI,SAAS;YACb,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,KAAK,EAAE,EAAE;YACrD,IAAI,SAAS,GAAG;YAChB,IAAI,IAAI;YACR,IAAI,SAAS;QACjB;QAEA,SAAS;YACL,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,SAAS,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,GACvD,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE;YAGtB,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,UAAU,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,GACxD,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE;YAGtB,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE;YACjB,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE;YACjB,IAAI,CAAC,IAAI;QACb;IACJ;IAEA,SAAS,aAAa,GAAG,EAAE,GAAG;QAC1B,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAM,CAAA,MAAM,MAAM,CAAA,KAAM;IACzD;IAEA,oBAAoB;IACpB,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,IAAK;QACzB,IAAI,SAAS,aAAa,IAAI;QAC9B,IAAI,IAAI,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK;QACnC,IAAI,IAAI,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK;QACnC,IAAI,KAAK,KAAK,MAAM,KAAK;QACzB,IAAI,KAAK,KAAK,MAAM,KAAK;QAEzB,YAAY,IAAI,CAAC,IAAI,OAAO,GAAG,GAAG,IAAI,IAAI;IAC9C;IAEA,SAAS;QACL,OAAO,qBAAqB,CAAC;QAC7B,IAAI,SAAS,CAAC,GAAG,GAAG,OAAO;QAE3B,IAAK,IAAI,IAAI,GAAG,IAAI,YAAY,MAAM,EAAE,IACpC,WAAW,CAAC,EAAE,CAAC,MAAM;IAE7B;IAEA;AACJ,CAAA,KAEA,wBAAwB;CACxB,4CAA4C","sources":["src/index.js"],"sourcesContent":["'use strict';\n\n(function () {\n    let canvas = document.getElementById('canvas-overlay');\n    let ctx = canvas.getContext('2d');\n    let circleArray = [];\n\n    let width = canvas.width = window.innerWidth;\n    let height = canvas.height = window.innerHeight;\n\n    // Circle Object creator\n    class Circle {\n        constructor(x, y, dx, dy, radius) {\n            this.x = x;\n            this.y = y;\n            this.dx = dx;\n            this.dy = dy;\n            this.radius = radius;\n        }\n\n        draw() {\n            ctx.beginPath();\n            ctx.arc(this.x, this.y, this.radius, 0, 2 * Math.PI, false);\n            ctx.fillStyle = 'rgba(255, 255, 255, 0.5)';\n            ctx.fill();\n            ctx.closePath();\n        };\n\n        update() {\n            if (this.x + this.radius > width || this.x - this.radius < 0) {\n                this.dx = -this.dx;\n            }\n\n            if (this.y + this.radius > height || this.y - this.radius < 0) {\n                this.dy = -this.dy;\n            }\n\n            this.x += this.dx;\n            this.y += this.dy;\n            this.draw();\n        };\n    }\n\n    function getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min + 1)) + min\n    }\n\n    // Generates Circles\n    for (let i = 0; i < 20; i++) {\n        let radius = getRandomInt(40, 80);\n        let x = Math.floor(Math.random() * width);\n        let y = Math.floor(Math.random() * height);\n        let dx = Math.random() - 2;\n        let dy = Math.random() - 2;\n\n        circleArray.push(new Circle(x, y, dx, dy, radius));\n    }\n\n    function animate() {\n        window.requestAnimationFrame(animate);\n        ctx.clearRect(0, 0, width, height);\n\n        for (let j = 0; j < circleArray.length; j++) {\n            circleArray[j].update();\n        }\n    }\n\n    animate();\n})();\n\n// TODO: make responsive\n// https://jsfiddle.net/lannymcnie/4yy08pax/"],"names":[],"version":3,"file":"index.js.map"}